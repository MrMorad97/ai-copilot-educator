name: CI/CD Pipeline

on:
  push:
    branches: [ main ]  # Run on pushes to the main branch
  pull_request:  # Optionally run on pull requests

jobs:
  build-and-test:
    runs-on: ubuntu-latest  # Use Ubuntu virtual environment
    strategy:
      fail-fast: false  # Allow all steps to run even if one fails (optional)
    steps:
      - uses: actions/checkout@v3  # Checkout code from the repository

      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: 3.8  # Adjust based on your Python requirements

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install langchain streamlit streamlit_chat chromadb pypdf fastembed flake8 pytest

      - name: Install Ollama (adjust if using a different package manager)
        run: |
          curl -fsSL https://ollama.com/install.sh | sh

      - name: Pull Ollama mistral model
        run: ollama pull mistral

      - name: Run Super-Linter (highly recommended)
        uses: github/super-linter@v4
        with:
          # Optional: Specify custom Super-Linter flags (see https://github.com/github/super-linter)
          # flags: '--format json'  # Example for JSON output

      - name: Run linting (optional for additional checks)
        run: flake8 .  # Run Flake8 in addition to Super-Linter

      - name: Run unit tests
        run: pytest  # Replace with your specific test commands if needed

      - name: Build Streamlit app (if applicable)
        run: |
          streamlit run server.py  # Adjust the command if needed
